from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from bin.ect import cfg
from bin.kb import inline
from bin.ect.model import Users

router = Router()


@router.message(CommandStart())
async def start_command(message: Message, state: FSMContext) -> None:
    text = "<b>–°–∞–ª—é—Ç!</b>\n–Ø - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –Ω–∞ –∫–∞–Ω–∞–ª–µ - <a href='https://t.me/blockarchi'>–ë–ª–æ–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–∞.</a>\n" \
           "<i>–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —É–ª—É—á—à–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ –∫–∞–Ω–∞–ª–µ, " \
           "—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤—è–∑—å —Å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º–∏ –∏ –≤ –±—É–¥—É—â–µ–º, —è –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å " \
           "–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ç–µ–º–∞—Ö –Ω–∞ –∫–∞–Ω–∞–ª–µ.</i>\n\n" \
           "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>üòâ"

    is_admin = True if str(message.from_user.id) in cfg.ID_ADMINS or \
                       str(message.chat.id) in cfg.ID_ADMINS else False
    await message.answer(text, reply_markup=inline.menu(is_admin))
    await state.clear()

    user = Users.get(message.from_user.id)
    if user is None:
        Users.add(message.from_user.id, message.from_user.full_name)
    elif user.name != message.from_user.full_name:
        Users.update(message.from_user.id, message.from_user.full_name)


@router.callback_query(inline.Menu.filter(F.value == "–ú–µ–Ω—é"))
async def inline_menu(callback: CallbackQuery, state: FSMContext) -> None:
    await callback.message.delete()
    await callback.answer()
    await start_command(callback.message, state)


@router.message(Command("about"))
async def about_command(message: Message) -> None:
    text = "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ—Ç–∞ –ø–∏—à–∏—Ç–µ " \
           "<a href='https://t.me/k_mickey'>—Å–æ–∑–¥–∞—Ç–µ–ª—é –ú–∏—Ö–∞–∏–ª—É.</a>"
    await message.answer(text)
